/* 
TODO
make other page elements grow as you scroll, too

*/



@import "./variables.scss";

body {
  // Photo by Gabriel Peter
  background: linear-gradient(#0008, #0008), center 30% / contain url('../public/images/background-splash.jpg') no-repeat;
  background-attachment: fixed;
  background-size: cover;
  backdrop-filter: blur(10px);
  padding-bottom: 2rem; /* All this does is le the backdrop-filter apply even if the last element on the page has a margin-bottom */
}

html {
  scroll-behavior: smooth;
}

.navbar {
  position: sticky;
  background: bottom / 100% 300% linear-gradient(180deg, #ffff, #fffc, transparent 66%, transparent) no-repeat;
  z-index: 1;
  transition: top 0.4s ease-in-out, background-position 0.4s ease-in-out, box-shadow 0.4s ease-in-out;
}

.navbar:not(.sticky) {  
  top: -25rem;
  background-position: bottom;
}

.navbar.sticky {
  top: 0;
  background-position: top;
  box-shadow: 0 0 0 2px #fff;
}

.nav-link {
  transition: background-color 0.3s ease-in-out, color 0.4s ease-in-out, text-shadow 0.4s ease-in-out, font-size 0.4s ease-in-out, font-weight 0.4s ease-in-out;
}

.navbar:not(.sticky) .nav-link, .navbar:not(.sticky) .nav-item::after {
  color: #fff;
  text-shadow: 2px 2px 5px #000;
  font-size: 1.2rem;
}

.navbar.sticky .nav-link, .navbar.sticky .nav-item::after {
  color: #555;
  text-shadow: 1px 1px 3px #fff8;
  font-size: 1.2rem;
  font-weight: 400;
}

.nav-link:hover {
  background-color: #fff8;
}

.nav-item {
  position: relative;
  transition: margin 0.4s ease-in-out;
}

.navbar:not(.sticky) .nav-item {
  margin: 0 1rem;
}

@media only screen and (min-width: 992px) {
  .nav-item:not(:last-child)::after {
    content: "|";
    display: inline-block;
    padding: 0.5rem 0;
    position: absolute;
    right: -1rem;
    top: 0;
    transition: background-color 0.3s ease-in-out, color 0.4s ease-in-out, text-shadow 0.4s ease-in-out, font-size 0.4s ease-in-out, font-weight 0.4s ease-in-out, transform 0.4s ease-in-out;
  }
  
  .navbar.sticky .nav-item:not(:last-child)::after {
    transform: scaleX(0);
  }
}

.navbar:not(.sticky) .nav-item .slide-border {
  background-color: #fff;
}

.navbar.sticky .nav-item .slide-border.bottom {
  background-color: #fff;
}

.navbar.sticky .nav-item .slide-border:not(.bottom) {
  background-color: #3330;
}

.slide-border {
  position: absolute;
}

.slide-border.left {
  bottom: 0;
  left: 0;
  width: 2px;
}

.slide-border.right {
  bottom: 0;
  right: 0;
  width: 2px;
}

.slide-border.bottom {
  bottom: 0;
  left: 0;
  height: 2px;
}

.slide-border.top {
  top: 0;
  left: 0;
  height: 2px;
}

*:not(:hover) > .slide-border.left {
  height: 0;
  transition: height 0.15s 0.15s ease-out, background-color 0.4s ease-in-out;
}

*:not(:hover) > .slide-border.right {
  height: 0;
  transition: height 0.15s ease-in, background-color 0.4s ease-in-out;
}

*:not(:hover) > .slide-border.bottom {
  width: 0;
  transition: width 0.15s 0.15s ease-out, background-color 0.4s ease-in-out;
}

*:not(:hover) > .slide-border.top {
  width: 0;
  transition: width 0.15s ease-in, background-color 0.4s ease-in-out;
}

*:hover > .slide-border.left {
  height: 100%;
  transition: height 0.15s ease-in, background-color 0.4s ease-in-out;
}

*:hover > .slide-border.right {
  height: 100%;
  transition: height 0.15s 0.15s ease-out, background-color 0.4s ease-in-out;
}

*:hover > .slide-border.bottom {
  width: 100%;
  transition: width 0.15s ease-in, background-color 0.4s ease-in-out;
}

*:hover > .slide-border.top {
  width: 100%;
  transition: width 0.15s 0.15s ease-out;
}

.navbar-toggler {
  border: none;
}

.navbar-toggler-icon {
  mask: center / contain url("../public/images/menu-icon.svg") no-repeat;
  -webkit-mask: center / contain url("../public/images/menu-icon.svg") no-repeat;
  background-color: map-get($theme-colors, "primary");
}

div#waterfall-container {
  position: sticky;
  z-index: -1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  overflow: hidden;
  margin-bottom: -100vh;
}

svg#waterfall-animation {
  opacity: 1;
  pointer-events: none;
  user-select: none;
}

svg#waterfall-animation path {
  opacity: 0; /* This will be overriden when the animation kicks in */
}

/* Shimmer is for the water animation */

.shimmer {
  animation: shimmer 1s 0s infinite both linear;
  transform-origin: center center;
}

@keyframes shimmer {
  0%{opacity: 0; transform: translateY(calc(-1px + -5%)) scaleX(1);}
  50%{opacity: 0.1; transform: translateY(calc(0.5px + 2.5%)) scaleX(0.9);}
  100%{opacity: 0; transform: translateY(calc(2px + 10%)) scaleX(0.7);}
}

.plan {
  border-radius: 1rem;
  height: 100%;
  --bs-bg-opacity: 0.6;
  border: 2px solid;
  padding: 2.25rem;  
  animation: scrolling-plan 1s paused forwards linear;
  
  @media only screen and (min-width: 768px) {
    animation: none;
    transition: all 0.25s ease-in-out;
    &:hover {
      padding: 4.5rem; 
      margin: -2.25rem;
      height: calc(100% + 4.5rem);
    }
  }

  @keyframes scrolling-plan {
    100% {
      padding: 4.5rem; 
      margin: -2.25rem;
      height: calc(100% + 4.5rem);
    }
  }

  h3 {
    font-size: 1.625rem;
  }

  .hosting-image {
    margin-top: 20px;
    max-width: 100%;
    &.small {
      max-height: 55px;
    }
    &.medium {
      max-height: 80px;
    }
    &.large {
      max-height: 93px;
    }
  }

  .text-primary, .text-secondary {
    background-color: #fff4;
    box-shadow: 0 0 80px 80px #fff4;
  }
}

#top {
  margin-left: 4%;
  margin-bottom: -2rem;
  font-size: 150%;

  h2 {
    width: 100%;
    font-size: 1.75em;
    text-align: start;
    span {
      white-space: nowrap;
    }
  }

  @media all and (max-width: map-get($grid-breakpoints, "lg")) {
    margin-right: 0;
    margin-bottom: 0;
  }

  @media all and (max-width: map-get($grid-breakpoints, "md")) {
    font-size: 125%;
    margin-right: 0;
    h2 {
      width: 100%;
      text-align: center;
    }
  }
}

.hosting-list {
  width: 100%;
  align-items: start;
  li {
    text-align: start;
  }

  @media all and (max-width: map-get($grid-breakpoints, "md")) {
    align-items: center;
    li {
      text-align: center;
    }
  }
}

.form-select, .form-select:focus, .form-control, .form-control:focus {
  color: map-get($theme-colors, "dark");
}

#contact div,
#pay {
  max-width: 500px;
  margin-left: auto;
  margin-right: auto;
}

#pay {
  min-height: 400px;
}

.text-muted {
  color: #bbb !important;
}